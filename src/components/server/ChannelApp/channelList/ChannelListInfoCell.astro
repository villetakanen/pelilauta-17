---
import type { ChannelWithStats } from 'src/schemas/ChannelSchema';
import { toDisplayString } from 'src/utils/contentHelpers';
import { t } from 'src/utils/i18n';
import ProfileLink from '../../../svelte/app/ProfileLink.svelte';

export interface Props {
  channelWithStats: ChannelWithStats;
}
const { channelWithStats } = Astro.props;
const { stats } = channelWithStats;
const { latestThread, latestUpdatedThread } = stats;
---
{latestThread && (
  <p class="text-caption m-0">{t('threads:channel.latest.createdAt')}</p>
  <p class="downscaled m-0 mb-1 no-text-wrap">
    <a href={`/threads/${latestThread.key}`}>{latestThread.title}</a><br/>
    {toDisplayString(latestThread.createdAt)} - <ProfileLink uid={latestThread.owners?.[0] || ''} client:only="svelte"/>
  </p>
)}
{latestUpdatedThread && (
  <div class="border-t my-1"></div>
  <p class="text-caption m-0">{t('threads:channel.latest.flowTime')}</p>
  <p class="downscaled m-0 mb-1 no-text-wrap">
    <a href={`/threads/${latestUpdatedThread.key}`}>{latestUpdatedThread.title}</a><br/>
    {toDisplayString(latestUpdatedThread.updatedAt)} - <ProfileLink uid={latestUpdatedThread.owners?.[0] || ''} client:only="svelte"/>
  </p>
)}
{(!latestUpdatedThread || latestUpdatedThread.key === latestThread?.key) && (
  <p class="text-caption m-0">{t('threads:channel.latest.latestIsNewest')}</p>
)}
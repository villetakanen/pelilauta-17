---
// src/components/server/Fonts.astro
// Optimized font loading to eliminate render-blocking (PBI-007 Phase 1)
---

<!-- Essential preconnect hints for font performance -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- Critical font loading: Open Sans with essential weights only -->
<!-- Using preload + async pattern to prevent render blocking -->
<link 
  rel="preload" 
  as="style" 
  onload="this.onload=null;this.rel='stylesheet'" 
  href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap"
  media="print"
  onload="this.media='all'"
/>

<!-- Fallback for browsers without JavaScript -->
<noscript>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" />
</noscript>

<!-- Progressive font loading: Load secondary font (Lato) after critical render -->
<script>
  // Load Lato font asynchronously after initial render
  function loadSecondaryFont() {
    const latoLink = document.createElement('link');
    latoLink.rel = 'stylesheet';
    latoLink.href = 'https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap';
    document.head.appendChild(latoLink);
  }
  
  // Load after DOM is ready or on next tick if already ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadSecondaryFont);
  } else {
    // Use requestIdleCallback for better performance, fallback to setTimeout
    if ('requestIdleCallback' in window) {
      requestIdleCallback(loadSecondaryFont);
    } else {
      setTimeout(loadSecondaryFont, 0);
    }
  }
</script>
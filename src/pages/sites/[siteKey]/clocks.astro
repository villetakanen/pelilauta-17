---
import PageWithTray from '@layouts/PageWithTray.astro';
import { parseSite } from '@schemas/SiteSchema';
import SiteTray from '@server/SiteApp/SiteTray.astro';
import BackgroundPoster from '@server/ui/BackgroundPoster.astro';
import ClocksApp from '@svelte/sites/ClocksApp.svelte';
import ClocksFabs from '@svelte/sites/ClocksFabs.svelte';
import { toClientEntry } from '@utils/client/entryUtils';
import { t } from '@utils/i18n';

interface Props {
  siteKey: string;
}
const { siteKey } = Astro.params;

// if no siteKey is provided, redirect to 404
if (!siteKey) {
  return Astro.redirect('/404');
}

// Fetch site data from the api
const siteResponse = await fetch(`${Astro.url.origin}/api/sites/${siteKey}`);
if (siteResponse.status === 404) {
  return Astro.redirect('/404');
}
const siteData = await siteResponse.json();
const site = parseSite(toClientEntry(siteData), siteKey);
const title = `${site.name} â€“ ${t('site:clocks.title')}`;
const image = site.avatarURL || site.posterURL || site.backgroundURL;

if (!site) {
  return Astro.redirect('/404');
}
---
<PageWithTray
  title={title}
  description={site.description}
  image={image}
>
  <SiteTray slot="app-tray" site={site}/>
  <ClocksApp site={site} client:only="svelte"/>
  <ClocksFabs site={site} client:only="svelte" slot="fab-tray"/>
  { site.backgroundURL && 
    <BackgroundPoster src={site.backgroundURL} slot="app-background-poster"/>
  }
</PageWithTray>
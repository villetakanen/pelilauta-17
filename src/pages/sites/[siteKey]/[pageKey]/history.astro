---
import PageWithTray from '@layouts/PageWithTray.astro';
import { PageSchema } from '@schemas/PageSchema';
import { SiteSchema } from '@schemas/SiteSchema';
import SiteTray from '@server/SiteApp/SiteTray.astro';
import BackgroundPoster from '@server/ui/BackgroundPoster.astro';
import PageHistoryApp from '@svelte/sites/history/PageHistoryApp.svelte';
import { t } from '@utils/i18n';
import { systemToNoun } from '@utils/schemaHelpers';

interface Props {
  siteKey: string;
  pageKey: string;
}

const { siteKey, pageKey } = Astro.params;

// Fetch site and page data from the API
const siteResponse = await fetch(`${Astro.url.origin}/api/sites/${siteKey}`);
const pageResponse = await fetch(
  `${Astro.url.origin}/api/sites/${siteKey}/pages/${pageKey}.json`,
);

if (!siteResponse.ok || !pageResponse.ok) {
  return Astro.redirect('/404');
}

const site = SiteSchema.parse(await siteResponse.json());
const page = PageSchema.parse(await pageResponse.json());

const title = `${t('site:page.history.title')} â€“ ${site.name} / ${page.name || pageKey}`;
const noun = systemToNoun(site.system);
const image = site.backgroundURL || '';
const revision = Number(
  Astro.url.searchParams.get('revision') ||
    (page.revisionHistory?.length || 0) + 1,
);
---
<PageWithTray 
  {title}
  shortTitle={t('site:page.history.title')} 
  description={site.description} 
  noun={noun} 
  {image}>

    <PageHistoryApp {site} {page} {revision} client:only="svelte"/>

    <SiteTray slot="app-tray" site={site}/>
  { site.backgroundURL && 
    <BackgroundPoster src={site.backgroundURL} slot="app-background-poster"/>
  }
</PageWithTray>
---
import ModalPage from '@layouts/ModalPage.astro';
import { parsePage } from '@schemas/PageSchema';
import { parseSite } from '@schemas/SiteSchema';
import DeletePageView from '@svelte/sites/DeletePageView.svelte';
import { toClientEntry } from '@utils/client/entryUtils';
import { t } from '@utils/i18n';

interface Props {
  siteKey: string;
  pageKey: string;
}

const { siteKey, pageKey } = Astro.params;
const origin = new URL(Astro.request.url).origin;

// Fetch site data from the api
const siteResponse = await fetch(`${origin}/api/sites/${siteKey}`);
// Fetch page data from the api
const pageResponse = await fetch(
  `${origin}/api/sites/${siteKey}/pages/${pageKey}.json`,
);

if (siteResponse.status === 404 || pageResponse.status === 404) {
  return Astro.redirect('/404');
}

// Get the site and page data
const site = parseSite(toClientEntry(await siteResponse.json()), siteKey);
const page = parsePage(
  toClientEntry(await pageResponse.json()),
  pageKey,
  siteKey,
);

const title = `${t('actions:delete')} â€“ ${page.name}`;
---
<ModalPage title={title}>
  <DeletePageView {site} {page} client:only="svelte"/>
</ModalPage>
---
import PageApp from '../../../components/server/SiteApp/PageApp.astro';
import SiteTray from '../../../components/server/SiteApp/SiteTray.astro';
import BackgroundPoster from '../../../components/server/ui/BackgroundPoster.astro';
import PageFabs from '../../../components/svelte/sites/PageFabs.svelte';
import SiteStoreInitializer from '../../../components/svelte/sites/SiteStoreInitializer.svelte';
import { getPageData, getSiteData } from '../../../firebase/server/sites';
import PageWithTray from '../../../layouts/PageWithTray.astro';
import { logError } from '../../../utils/logHelpers';
import { systemToNoun } from '../../../utils/schemaHelpers';

const { siteKey: siteKeyParam } = Astro.params;
const siteKey = siteKeyParam || 'mekanismi'; // This should not happen, but just in case

const site = await getSiteData(siteKey);

if (!site) {
  return Astro.redirect('/404');
}

const homePageKey = site.homepage || site.key;
const page = await getPageData(siteKey, homePageKey, Astro.url);

if (!page) {
  logError(`Page ${homePageKey} not found for site ${siteKey}`);
  return Astro.redirect('/404');
}

const noun = systemToNoun(site.system);
const image = site.avatarURL || site.posterURL || site.backgroundURL;

// Set cache headers for optimal performance
// - Short cache time since authenticated users get real-time updates
// - Longer stale-while-revalidate for anonymous users
Astro.response.headers.set(
  'Cache-Control',
  's-maxage=120, stale-while-revalidate=600',
); // 2 min cache, 10 min stale-while-revalidate
---

<PageWithTray
  title={site.name}
  noun={noun}
  description={site.description}
  image={image}>
  <SiteStoreInitializer {site} client:only="svelte" />
  <SiteTray slot="app-tray" {site} />
  <PageApp {site} {page} />
  <PageFabs pageKey={homePageKey} {site} client:only="svelte" slot="fab-tray" />
  {site.backgroundURL && (
    <BackgroundPoster src={site.backgroundURL} slot="app-background-poster" />
  )}
</PageWithTray>